{"version":3,"sources":["component/Navbar.js","component/Textform.js","component/Alert.js","component/About.js","component/ColorPalet.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","href","role","about","aria-labelledby","ColorPalet","onClick","toggleMode","forhtml","placeholder","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heding","value","onChange","event","console","log","target","rows","backgroundColor","newtext","toUpperCase","showAlert","toLocaleLowerCase","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","length","Alert","height","alert","word","lower","toLowerCase","charAt","slice","capitalize","msg","About","mystyle","data-bs-parent","defaultProps","palet","component","listStyle","class","tabindex","aria-hidden","data-bs-dismiss","App","setdarkMode","_useState3","_useState4","setalert","message","setTimeout","Fragment","logo","home","aboutUs","contactUs","body","react_router","exact","path","element","heading","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f70c160f.chunk.js","sourcesContent":["\r\nimport React from 'react' \r\nimport PropTypes from \"prop-types\"\r\nimport {Link} from \"react-router-dom\";\r\n// import ColorPalet from './ColorPalet';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to={\"/\"}>\r\n            {props.title}\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to={\"/\"}>\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to={\"/About\"}>\r\n                  about\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item dropdown\">\r\n                <a\r\n                  className=\"nav-link dropdown-toggle\"\r\n                  href=\"/\"\r\n                  id=\"navbarDropdown\"\r\n                  role=\"button\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  {props.about}\r\n                </a>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"/\">\r\n                      Action\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"/\">\r\n                      Another action\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <hr className=\"dropdown-divider\" />\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"/\">\r\n                      Something else here\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link disabled\" href=\"/\">\r\n                  Disabled\r\n                </a>\r\n              </li>\r\n            </ul>\r\n\r\n            {props.ColorPalet}\r\n\r\n            <div className=\"form-check form-switch mx-3 my-2\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n              //  { role=\"switch\"}\r\n                onClick={props.toggleMode}\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                className={`form-check-label text-${\r\n                  props.mode === \"light\" ? \"dark\" : \"light\"\r\n                }`}\r\n                forhtml=\"flexSwitchCheckDefault\"\r\n              >\r\n               {props.mode === \"light\" ? \"ineble-dark\" : \"ineble-light\"}\r\n              </label>\r\n            </div>\r\n            <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"this is adaarsh\",\r\n  about: \"this is harry\",\r\n};\r\n","import React, { useState } from 'react' \r\n// import copy from \"copy-to-clipboard\";\r\n// import PropTypes from 'prop-types'\r\n\r\nexport default function Textform(props){\r\n\r\n  const [text, setText] = useState(\"\");\r\n   const deleteAll =()=>{\r\n     setText(\"\")\r\n     props.showAlert('delet all text' ,'danger')\r\n   }\r\n\r\n  const copyToClipboard = () => {\r\n    let text = document.getElementById(\"myInput\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert('copied all text' ,'success')\r\n  };\r\n\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert('remove ectra spaces' ,'warning')\r\n  };\r\n\r\n  \r\n  const handelUpCLick = () => {\r\n    console.log(\"the handelupclickedwas clicked\" + text);\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n    props.showAlert('convert to uppercase' ,'primary')\r\n  };\r\n  const handelLowCLick = () => {\r\n    console.log(\"the handelupclickedwas clicked\" + text);\r\n    let newtext = text.toLocaleLowerCase();\r\n    setText(newtext);\r\n    props.showAlert('convert to lowercase' ,'primary')\r\n  };\r\n  const handelOnChange = (event) => {\r\n    console.log(\"the handelonchanced clicked\");\r\n    setText(event.target.value);\r\n  };\r\n  // thie funtion never stops just loops\r\n  // setText(\"this is the text\")\r\n\r\n  // return----------------------------------------------------\r\n  return (\r\n    <div>\r\n      <div className=\"container mb-3\" style={{ color:props.mode=== 'dark'?'white': 'black'}}>\r\n        <h1>{props.heding}</h1>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"myInput\"\r\n          value={text}\r\n          onChange={handelOnChange}\r\n          rows=\"8\"style={{backgroundColor: props.mode==='dark'? '#24183e': 'white', color:props.mode=== 'dark'?'white': 'black'}}\r\n        ></textarea>\r\n        <button className=\"btn btn-primary my-3\" onClick={handelUpCLick}>\r\n          upprecase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-3 my-3\" onClick={handelLowCLick}>\r\n          lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary \" onClick={copyToClipboard}>\r\n          Copy text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={handleExtraSpaces}>\r\n          Remove extra spaces\r\n        </button>\r\n        <button className=\"btn btn-primary \" onClick={deleteAll}>\r\n          delete all\r\n        </button>\r\n      </div>\r\n      <div className=\"container\" style={{ color:props.mode=== 'dark'?'white': 'black'}}>\r\n        <h2>this is the sumery</h2>\r\n        <p>\r\n          {\" \"}\r\n          {text.split(\" \").length} word and {text.length} character\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} minites to read </p>\r\n        <h2>privew</h2>\r\n        <p>{text}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n  return (\r\n    <div>\r\n      <div style={{height:'50px'}}>\r\n    {props.alert && <div className=\"contaner \">\r\n      <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role='alert'>\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n      </div>\r\n    </div>}\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react' \r\nexport default function About(props) {\r\n  \r\n let mystyle ={\r\n  backgroundColor: props.mode==='dark'? '#24183e': 'white', color:props.mode=== 'dark'?'white': 'black'\r\n }\r\n\r\n\r\n  \r\n  \r\n  // const [mystyle, setmyStyle] = useState({\r\n  //   color: \"white\",\r\n  //   backgroundColor: \"black\"\r\n  // });\r\n// const [btntext, setbtntext] = useState(\"enable dark mode\");\r\n// const [, set] = useState();\r\n\r\n// const toggeleStyle =()=>{\r\n//   if (mystyle.color ===\"white\") {\r\n//     console.log('fountion is run');\r\n//     setbtntext(\"dark mode enable\")\r\n//     setmyStyle({\r\n//       color: \"black\",\r\n//       backgroundColor: \"white\"\r\n//     })\r\n//   }else{\r\n//     setmyStyle({\r\n//       color: \"white\",\r\n//       backgroundColor: \"black\"\r\n//     })\r\n//     setbtntext(\"dark mode disable\")\r\n//     console.log('else run');\r\n//   }\r\n// }\r\n\r\n  // return -------------------------------\r\n  return (\r\n    <div className=\"container\" style={mystyle}>\r\n      <h1 className=\"my-3\"> about us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={mystyle}\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body \" style={mystyle}>\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={mystyle}\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={mystyle}>\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed \"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={mystyle}\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={mystyle}>\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst palet = (component) => {\r\n  return (\r\n    <li className=\"my-2 li\" style={{  listStyle: 'none'}} >\r\n      <div class=\"btn-group me-2\" role=\"group\" aria-label=\"First group\">\r\n        <span className=\"mx-3\">{component}</span>\r\n        <button type=\"button\" class=\"btn-light px-3\">\r\n          \r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-secondary\">\r\n          \r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-success\">\r\n          \r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-warning\">\r\n        \r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-dark\">\r\n        \r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\nexport default function ColorPalet() {\r\n  return (\r\n    <div>\r\n\r\n\r\n<button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n  Launch demo modal\r\n</button>\r\n\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n      <ul>\r\n          {palet(\"nav-bar\")}\r\n          {palet(\"body\")}\r\n          {palet(\"tectArea\")}\r\n        </ul>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n    </div>\r\n  );\r\n}\r\n","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, { useState } from 'react' \r\nimport Navbar from './component/Navbar';\r\nimport Textform from './component/Textform';\r\nimport Alert from './component/Alert';\r\nimport About from './component/About';\r\nimport ColorPalet from './component/ColorPalet';\r\n\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\n//  <Navbar title=\"harry\" about=\"adarsh\" />  \r\nfunction App() {\r\n const [mode, setdarkMode] = useState('light');\r\n \r\n const [alert, setalert] = useState(null);\r\n \r\n const showAlert =(message, type)=>{\r\n   setalert({\r\n     msg:message,\r\n     type:type\r\n   })\r\n   setTimeout(() => {\r\n     setalert(null)\r\n   }, 1500);\r\n }\r\n console.log(mode);\r\n const toggleMode =()=>{\r\n   if (mode === 'dark') {\r\n     setdarkMode('light')\r\n     document.body.style.backgroundColor = 'white'\r\n     showAlert('darkmode is disable' , 'success')\r\n    //  document.title=\"Textutils -darkmode\"\r\n    //  setInterval(() => {\r\n    //   document.title=\"Textutils is Amzising\"\r\n    //  }, 2000);\r\n    //  setInterval(() => {\r\n    //   document.title=\"Textutils install now\"\r\n    //  }, 1500);\r\n   }else{\r\n     setdarkMode('dark')\r\n     document.body.style.backgroundColor = '#020d39'\r\n     showAlert('darkmode is enable' , 'success')\r\n     document.title=\"Textutils -lightmode\"\r\n   }\r\n }\r\n  return (\r\n    <>\r\n    <Router>\r\n      <Navbar\r\n        logo=\"Dummy\"\r\n        home=\"HOME\"\r\n        aboutUs=\"ABOUTUS\"\r\n        contactUs=\"CONTACTUS\"\r\n        mode ={mode}\r\n        toggleMode={toggleMode}\r\n        ColorPalet={<ColorPalet/>}\r\n           />\r\n           <Alert alert={alert}/>\r\n   <div className=\"container\">\r\n        <Routes>\r\n          <Route exact path=\"/About\" element={<About mode={mode} />}></Route>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            element={\r\n              <Textform heading=\"Enter text\" mode={mode} showAlert={showAlert} />\r\n          \r\n            }\r\n          ></Route>\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}